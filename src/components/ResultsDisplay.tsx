
import type { DiagnosisResult } from "../lib/types";

interface ResultsDisplayProps {
  results: DiagnosisResult[] | null;
  isLoading: boolean;
}

const ResultsDisplay = ({ results, isLoading }: ResultsDisplayProps) => {
  if (isLoading) {
    return (
      <div className="w-full p-6">
        <h3 className="text-xl font-semibold mb-6 text-center">Processing Analysis</h3>
        <div className="space-y-4">
          <p className="text-gray-600 text-center mb-4">
            Analyzing medical data and generating predictions...
          </p>
          <div className="progress-container">
            <div className="progress-bar" style={{ width: "70%" }}></div>
          </div>
          <p className="text-sm text-gray-500 text-center mt-2">This may take a few moments</p>
        </div>
      </div>
    );
  }

  if (!results || results.length === 0) {
    return null;
  }

  // The first result is always the highest probability/predicted class
  const topResult = results[0];

  return (
    <div className="w-full p-6">
      <h3 className="text-xl font-semibold mb-6">Analysis Results</h3>
      
      <div className="mb-6 p-4 bg-blue-50 rounded-lg border border-blue-100">
        <h4 className="text-lg font-medium text-blue-800">Primary Diagnosis</h4>
        <div className="mt-2 space-y-2">
          <div className="flex justify-between items-center">
            <h4 className="font-medium text-lg">{topResult.disease}</h4>
            <span className="text-sm font-semibold bg-blue-600  px-2 py-1 rounded-full">
              {(topResult.probability * 100).toFixed(0)}%
            </span>
          </div>
          <div className="progress-container">
            <div 
              className="progress-bar bg-blue-500" 
              style={{ width: `${topResult.probability * 100}%` }}
            ></div>
          </div>
          <p className="text-sm text-gray-700 mt-2">
            {topResult.description}
          </p>
        </div>
      </div>

      {results.length > 1 && (
        <div className="space-y-4">
          <h4 className="font-medium text-gray-700">Other Possible Conditions</h4>
          {results.slice(1).map((result, index) => (
            <div key={index} className="space-y-1 p-3 bg-gray-50 rounded border">
              <div className="flex justify-between items-center">
                <h5 className="font-medium">{result.disease}</h5>
                <span className="text-sm font-semibold bg-blue-600  px-2 py-1 rounded-full">
                  {(result.probability * 100).toFixed(0)}%
                </span>
              </div>
              <div className="progress-container">
                <div 
                  className="progress-bar bg-gray-400" 
                  style={{ width: `${result.probability * 100}%` }}
                ></div>
              </div>
              <p className="text-sm text-gray-600 mt-1">
                {result.description}
              </p>
            </div>
          ))}
        </div>
      )}
      
      <div className="text-xs text-gray-500 mt-6 bg-gray-50 p-3 rounded-md">
        <strong>Note:</strong> These predictions are generated by an AI model and should be
        reviewed by a healthcare professional. They do not constitute medical advice.
      </div>
    </div>
  );
};

export default ResultsDisplay;
